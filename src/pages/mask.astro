<!doctype html>
<html lang="zh-CN">
  <head>
    <meta charset="UTF-8" />
    <title>GSAP with Astro</title>
    <style is:global>
      * {
        box-sizing: border-box;
      }

      :root {
        --bg: rgb(9, 14, 23);
        --gradientBg: linear-gradient(45deg, #40e0d0, #9932cc, #ff1493, orange);
      }

      body {
        min-height: 100vh;
        margin: 0;
        padding: 0;
        background-color: var(--bg);
        color: #ffffff;
      }

      /* Reset */
      a {
        color: inherit;
      }

      ul {
        list-style: none;
      }

      button {
        border-radius: 0.4em;
        background: var(--bg);
        color: white;
        border: none;
        padding: 0.5rem;
        font-size: inherit;
        cursor: pointer;
      }

      .wrapper {
        position: relative;
      }

      /* Text */
      .hero__heading {
        font-size: clamp(2rem, 5vw, 8rem);
        text-transform: uppercase;
        margin: 0;
      }

      /* Menu */
      .menu {
        width: 100%;
        height: 100%;
        top: 0;
        left: 0;
        position: fixed;
        text-align: center;
        display: flex;
        justify-content: center;
        align-items: center;
        pointer-events: none;
        background: var(--gradientBg);
        clip-path: circle(0 at calc(100% - 2rem) 2rem);
        transition: clip-path 500ms;
        z-index: 1;
        font-size: clamp(1rem, 2vw, 4rem);
      }

      .menu.is-open {
        clip-path: circle(200% at calc(100% - 2rem) 2rem);
        pointer-events: all;
      }

      .menu a {
        display: block;
        padding: 0.5em;
      }

      .menu-button {
        position: fixed;
        top: 1rem;
        right: 1rem;
        z-index: 2;
      }

      .menu-button span:last-child,
      .menu-button.is-active span:first-child {
        display: none;
      }

      .menu-button.is-active span:last-child {
        display: inline;
      }

      /* Hero */
      .hero {
        min-height: 100vh;
        padding: clamp(1rem, 2vw, 5rem);
        display: flex;
        align-items: center;
      }

      .hero--secondary {
        --mask: radial-gradient(
          circle at var(--x, 50%) var(--y, 50%),
          black var(--maskSize1, 0),
          transparent 0,
          transparent var(--maskSize2, 0),
          black var(--maskSize2, 0),
          black var(--maskSize3, 0),
          transparent 0
        );
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: var(--gradientBg);
        color: rgb(9, 14, 23);
        -webkit-mask-image: var(--mask);
        mask-image: var(--mask);
      }
    </style>
  </head>
  <body>
    <header>
      <button class="menu-button" data-btn="menu">
        <span>Menu</span>
        <span>Close</span>
      </button>
      <nav class="menu" data-menu>
        <ul>
          <li>
            <a href="/">Home</a>
          </li>
          <li>
            <a href="/post">Projects</a>
          </li>
          <li>
            <a href="/portfolio">作品集</a>
          </li>
        </ul>
      </nav>
    </header>

    <div class="wrapper">
      <div class="hero">
        <h1 class="hero__heading">Welcome to my website</h1>
      </div>

      <div class="hero hero--secondary" aria-hidden="true" data-hero>
        <p class="hero__heading">Welcome to my website</p>
      </div>
    </div>

    <script>
      import gsap from "gsap";
      window.gsap = gsap;
      const hero = document.querySelector("[data-hero]");

      /* Menu */
      const menuButton = document.querySelector('[data-btn="menu"]');
      const menu = document.querySelector("[data-menu]");

      if (menuButton && menu) {
        menuButton.addEventListener("click", () => {
          menu.classList.toggle("is-open");
          menuButton.classList.toggle("is-active");
        });
      } else {
        console.error('menuButton or menu is null or undefined');
      }

      /* Timeline */
      const tl = gsap.timeline();

      tl.to(hero, {
        "--maskSize1": "20%",
        duration: 0.5,
        ease: "back.out(2)",
      }).to(hero, {
        "--maskSize2": "28%",
        "--maskSize3": "calc(28% + 0.1rem)",
        duration: 0.5,
        delay: 0.5,
        ease: "back.out(2)",
      });

      /* Cursor */
      window.addEventListener("mousemove", (e) => {
        const { clientX, clientY } = e;
        const x = Math.round((clientX / window.innerWidth) * 100);
        const y = Math.round((clientY / window.innerHeight) * 100);

        gsap.to(hero, {
          "--x": `${x}%`,
          "--y": `${y}%`,
          duration: 0.3,
          ease: "sine.out",
        });
      });
    </script>
  </body>
</html>
