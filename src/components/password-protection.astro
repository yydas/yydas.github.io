---
interface Props {
  password: string;
  storageKey: string;
  title?: string;
  description?: string;
}

const {
  password,
  storageKey,
  title = '访问受限',
  description = '请输入密码以继续访问'
} = Astro.props;
---

<div id="password-protection" class="min-h-[calc(100vh-200px)] flex items-center justify-center">
  <div class="max-w-md w-full mx-auto px-7 lg:px-6">
    <div class="text-center mb-8">
      <h1 class="text-2xl font-bold text-neutral-900 dark:text-neutral-100 mb-2">{title}</h1>
      <p class="text-neutral-600 dark:text-neutral-400">{description}</p>
    </div>
    <div class="flex gap-2">
      <input
        type="password"
        id="password-input"
        class="flex-1 px-4 py-2 border rounded-lg dark:bg-neutral-800 dark:border-neutral-700"
        placeholder="请输入密码"
      />
      <button
        id="submit-password"
        class="px-6 py-2 bg-indigo-600 text-white rounded-lg hover:bg-indigo-700 transition-colors"
      >
        确认
      </button>
    </div>
  </div>
</div>

<div id="protected-content" class="hidden">
  <slot />
</div>

<script define:vars={{ password, storageKey }}>
  const passwordInput = document.getElementById('password-input');
  const submitButton = document.getElementById('submit-password');
  const passwordProtection = document.getElementById('password-protection');
  const protectedContent = document.getElementById('protected-content');

  // 检查是否已经输入过密码
  const savedPassword = localStorage.getItem(storageKey);
  if (savedPassword === password) {
    showContent();
  }

  submitButton?.addEventListener('click', () => {
    if (passwordInput?.value === password) {
      localStorage.setItem(storageKey, passwordInput.value);
      showContent();
    } else {
      alert('密码错误，请重试');
    }
  });

  // 添加回车键支持
  passwordInput?.addEventListener('keypress', (e) => {
    if (e.key === 'Enter') {
      submitButton?.click();
    }
  });

  function showContent() {
    passwordProtection?.classList.add('hidden');
    protectedContent?.classList.remove('hidden');
  }
</script> 